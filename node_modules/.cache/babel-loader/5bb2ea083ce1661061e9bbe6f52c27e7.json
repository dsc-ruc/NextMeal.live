{"ast":null,"code":"var _jsxFileName = \"/Users/jlap/Coding/StudentDeveloperChallenge/NextMeal.live/src/pages/MainPage.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Header from '../components/Header';\nimport GoogleMap from '../components/GoogleMap';\nimport Form from '../components/Form';\nimport './MainPage.css';\nimport axios from \"axios\";\n\nfunction getCoordinates() {\n  return new Promise(function (resolve, reject) {\n    navigator.geolocation.getCurrentPosition(resolve, reject);\n  });\n}\n\nexport default class MainPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tabs: [],\n      currlat: 39.708262399999995,\n      // 39.9528,\n      currlon: -75.11408639999999 //-75.1635,\n\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:8000/api/donor/?format=json').then(res => {\n      this.setState({\n        allLocations: res.data\n      });\n    }).then(() => {\n      this.setState({\n        closestPoint: closest(this.state.allLocations, {\n          currlat: this.state.currlat,\n          currlon: this.state.currlon\n        })\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n    getCoordinates().then(position => {\n      if (isNaN(position.coords.latitude) || isNaN(position.coords.longitude)) {\n        this.setState({\n          currlat: parseFloat(\"39.952744\")\n        });\n        this.setState({\n          currlon: parseFloat(\"-75.163500\")\n        });\n      } else {\n        this.setState({\n          currlat: position.coords.latitude\n        });\n        this.setState({\n          currlon: position.coords.longitude\n        });\n      }\n    });\n  }\n\n  render() {\n    const style = {\n      marginTop: \"90vh\",\n      position: \"relative\",\n      top: 0\n    };\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/about\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(About, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }))), React.createElement(Route, {\n      path: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Home, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nfunction Home() {\n  return React.createElement(GoogleMap, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  });\n}\n\nfunction About() {\n  return React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  });\n}","map":{"version":3,"sources":["/Users/jlap/Coding/StudentDeveloperChallenge/NextMeal.live/src/pages/MainPage.js"],"names":["React","Component","BrowserRouter","Router","Switch","Route","Header","GoogleMap","Form","axios","getCoordinates","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","MainPage","state","tabs","currlat","currlon","componentDidMount","get","then","res","setState","allLocations","data","closestPoint","closest","catch","error","console","log","position","isNaN","coords","latitude","longitude","parseFloat","render","style","marginTop","top","Home","About"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport Header from '../components/Header';\nimport GoogleMap from '../components/GoogleMap';\nimport Form from '../components/Form';\nimport './MainPage.css';\nimport axios from \"axios\";\n\nfunction getCoordinates() {\n  return new Promise(function(resolve, reject) {\n    navigator.geolocation.getCurrentPosition(resolve, reject);\n  });\n}\n\nexport default class MainPage extends Component {\n\n  state = {\n    tabs: [],\n    currlat: 39.708262399999995, // 39.9528,\n    currlon: -75.11408639999999, //-75.1635,\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:8000/api/donor/?format=json')\n      .then(res => {\n        this.setState({ allLocations: res.data });\n      }).then(() => {\n        this.setState({closestPoint: closest(this.state.allLocations, {currlat: this.state.currlat, currlon: this.state.currlon})});\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n\n      getCoordinates().then(position => {\n        if (isNaN(position.coords.latitude) || isNaN(position.coords.longitude)) {\n          this.setState({ currlat: parseFloat(\"39.952744\") });\n          this.setState({ currlon: parseFloat(\"-75.163500\") });\n        } else {\n          this.setState({ currlat: position.coords.latitude });\n          this.setState({ currlon: position.coords.longitude });\n        }\n      });\n  }\n\n    render() {\n        const style={\n          marginTop: \"90vh\",\n          position: \"relative\",\n          top: 0,\n        }\n        return (\n          <>\n          <div className=\"main\">\n            <Router>\n              <Header />\n              <div className=\"App\">\n              </div>\n\n              <Switch>\n                <Route path=\"/about\">\n                  <div className=\"page\">\n                    <About />\n                  </div>\n                </Route>\n                <Route path=\"/\">\n                  <Home />\n                </Route>\n              </Switch>\n            </Router>\n        </div>\n        \n        </>\n        )\n    }\n}\n\nfunction Home() {\n  return (\n    <GoogleMap />\n  )\n}\nfunction About() {\n  return (\n    <Form />\n  )\n}\n"]},"metadata":{},"sourceType":"module"}