{"ast":null,"code":"var _jsxFileName = \"/Users/jlap/Coding/StudentDeveloperChallenge/NextMeal.live/src/pages/MainPage.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Header from '../components/Header';\nimport GoogleMap from '../components/GoogleMap';\nimport Form from '../components/Form';\nimport './MainPage.css';\nimport axios from \"axios\";\n\nfunction distance(lat1, lon1, lat2, lon2) {\n  var p = 0.017453292519943295;\n  var a = 0.5 - Math.cos((lat2 - lat1) * p) / 2 + Math.cos(lat1 * p) * Math.cos(lat2 * p) * (1 - Math.cos((lon2 - lon1) * p)) / 2;\n  return 12742 * Math.asin(Math.sqrt(a));\n}\n\nfunction closest(data, v) {\n  // console.log(data.map(p => distance(v['lat'],v['lon'],p['lat'],p['lon'])))\n  // console.log(Math.min(...data.map(p => distance(v['lat'],v['lon'],p['lat'],p['lon']))))\n  var distances = data.map(function (p) {\n    console.log(p);\n    return {\n      lat: p.location.coordinates[0],\n      lon: p.location.coordinates[1],\n      organization: p.name_of_restaurant,\n      address: p.address,\n      distance: distance(v.currlat, v.currlon, p.location.coordinates[0], p.location.coordinates[1])\n    };\n  });\n  var minDistance = Math.min(...distances.map(d => d.distance));\n  var closestTap = {\n    organization: \"\",\n    address: \"\",\n    lat: \"\",\n    lon: \"\"\n  };\n\n  for (var i = 0; i < distances.length; i++) {\n    if (distances[i].distance === minDistance) {\n      closestTap.lat = distances[i].lat;\n      closestTap.lon = distances[i].lon;\n      closestTap.organization = distances[i].organization;\n      closestTap.address = distances[i].address;\n    }\n  }\n\n  return closestTap;\n}\n\nfunction getCoordinates() {\n  return new Promise(function (resolve, reject) {\n    navigator.geolocation.getCurrentPosition(resolve, reject);\n  });\n}\n\nexport default class MainPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tabs: [],\n      currlat: 39.708262399999995,\n      // 39.9528,\n      currlon: -75.11408639999999 //-75.1635,\n\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:8000/api/donor/?format=json').then(res => {\n      this.setState({\n        allLocations: res.data\n      });\n    }).then(() => {\n      this.setState({\n        closestPoint: closest(this.state.allLocations, {\n          currlat: this.state.currlat,\n          currlon: this.state.currlon\n        })\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n    getCoordinates().then(position => {\n      if (isNaN(position.coords.latitude) || isNaN(position.coords.longitude)) {\n        this.setState({\n          currlat: parseFloat(\"39.952744\")\n        });\n        this.setState({\n          currlon: parseFloat(\"-75.163500\")\n        });\n      } else {\n        this.setState({\n          currlat: position.coords.latitude\n        });\n        this.setState({\n          currlon: position.coords.longitude\n        });\n      }\n    });\n  }\n\n  render() {\n    const style = {\n      marginTop: \"90vh\",\n      position: \"relative\",\n      top: 0\n    };\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/about\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(About, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }))), React.createElement(Route, {\n      path: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Home, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nfunction Home() {\n  return React.createElement(GoogleMap, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  });\n}\n\nfunction About() {\n  return React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  });\n}","map":{"version":3,"sources":["/Users/jlap/Coding/StudentDeveloperChallenge/NextMeal.live/src/pages/MainPage.js"],"names":["React","Component","BrowserRouter","Router","Switch","Route","Header","GoogleMap","Form","axios","distance","lat1","lon1","lat2","lon2","p","a","Math","cos","asin","sqrt","closest","data","v","distances","map","console","log","lat","location","coordinates","lon","organization","name_of_restaurant","address","currlat","currlon","minDistance","min","d","closestTap","i","length","getCoordinates","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","MainPage","state","tabs","componentDidMount","get","then","res","setState","allLocations","closestPoint","catch","error","position","isNaN","coords","latitude","longitude","parseFloat","render","style","marginTop","top","Home","About"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport Header from '../components/Header';\nimport GoogleMap from '../components/GoogleMap';\nimport Form from '../components/Form';\nimport './MainPage.css';\nimport axios from \"axios\";\n\n\nfunction distance(lat1, lon1, lat2, lon2) {\n  var p = 0.017453292519943295;\n  var a =\n    0.5 -\n    Math.cos((lat2 - lat1) * p) / 2 +\n    (Math.cos(lat1 * p) *\n      Math.cos(lat2 * p) *\n      (1 - Math.cos((lon2 - lon1) * p))) /\n      2;\n  return 12742 * Math.asin(Math.sqrt(a));\n}\n\nfunction closest(data, v) {\n  // console.log(data.map(p => distance(v['lat'],v['lon'],p['lat'],p['lon'])))\n  // console.log(Math.min(...data.map(p => distance(v['lat'],v['lon'],p['lat'],p['lon']))))\n  var distances = data.map(function(p) {\n    console.log(p);\n    return {\n      lat: p.location.coordinates[0],\n      lon: p.location.coordinates[1],\n      organization: p.name_of_restaurant,\n      address: p.address,\n\n      distance: distance(v.currlat, v.currlon, p.location.coordinates[0], p.location.coordinates[1])\n    };\n  });\n  var minDistance = Math.min(...distances.map(d => d.distance));\n\n  var closestTap = {\n    organization: \"\",\n    address: \"\",\n    lat: \"\",\n    lon: \"\"\n  };\n\n  for (var i = 0; i < distances.length; i++) {\n    if (distances[i].distance === minDistance) {\n      closestTap.lat = distances[i].lat;\n      closestTap.lon = distances[i].lon;\n      closestTap.organization = distances[i].organization;\n      closestTap.address = distances[i].address;\n    }\n  }\n\n  return closestTap;\n}\nfunction getCoordinates() {\n  return new Promise(function(resolve, reject) {\n    navigator.geolocation.getCurrentPosition(resolve, reject);\n  });\n}\n\nexport default class MainPage extends Component {\n\n  state = {\n    tabs: [],\n    currlat: 39.708262399999995, // 39.9528,\n    currlon: -75.11408639999999, //-75.1635,\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:8000/api/donor/?format=json')\n      .then(res => {\n        this.setState({ allLocations: res.data });\n      }).then(() => {\n        this.setState({closestPoint: closest(this.state.allLocations, {currlat: this.state.currlat, currlon: this.state.currlon})});\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n\n      getCoordinates().then(position => {\n        if (isNaN(position.coords.latitude) || isNaN(position.coords.longitude)) {\n          this.setState({ currlat: parseFloat(\"39.952744\") });\n          this.setState({ currlon: parseFloat(\"-75.163500\") });\n        } else {\n          this.setState({ currlat: position.coords.latitude });\n          this.setState({ currlon: position.coords.longitude });\n        }\n      });\n  }\n\n    render() {\n        const style={\n          marginTop: \"90vh\",\n          position: \"relative\",\n          top: 0,\n        }\n        return (\n          <>\n          <div className=\"main\">\n            <Router>\n              <Header />\n              <div className=\"App\">\n              </div>\n\n              <Switch>\n                <Route path=\"/about\">\n                  <div className=\"page\">\n                    <About />\n                  </div>\n                </Route>\n                <Route path=\"/\">\n                  <Home />\n                </Route>\n              </Switch>\n            </Router>\n        </div>\n        \n        </>\n        )\n    }\n}\n\nfunction Home() {\n  return (\n    <GoogleMap />\n  )\n}\nfunction About() {\n  return (\n    <Form />\n  )\n}\n"]},"metadata":{},"sourceType":"module"}